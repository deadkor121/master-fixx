import dotenv from 'dotenv';
dotenv.config();

import { db } from "./db";
import { users, masters, serviceCategories, services } from "@shared/schema";

async function seedDatabase() {
  console.log("üå± Seeding database...");
  console.log('DATABASE_URL:', process.env.DATABASE_URL);

  // Insert service categories
  const categories = await db.insert(serviceCategories).values([
    {
      name: "–°–∞–Ω—Ç–µ—Ö–Ω—ñ–∫–∞",
      description: "–£—Å—É–Ω–µ–Ω–Ω—è –ø—Ä–æ—Ç—ñ–∫–∞–Ω—å, –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç—Ä—É–±, —Ä–µ–º–æ–Ω—Ç",
      icon: "fas fa-wrench",
      color: "blue",
      basePrice: "300",
    },
    {
      name: "–ï–ª–µ–∫—Ç—Ä–∏–∫–∞",
      description: "–ü—Ä–æ–≤–æ–¥–∫–∞, —Ä–æ–∑–µ—Ç–∫–∏, –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è, –µ–ª–µ–∫—Ç—Ä–æ–º–æ–Ω—Ç–∞–∂",
      icon: "fas fa-bolt",
      color: "yellow",
      basePrice: "400",
    },
    {
      name: "–ü—Ä–∏–±–∏—Ä–∞–Ω–Ω—è",
      description: "–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–µ –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è, –ø—ñ—Å–ª—è —Ä–µ–º–æ–Ω—Ç—É, —Ä–µ–≥—É–ª—è—Ä–Ω–µ",
      icon: "fas fa-broom",
      color: "green",
      basePrice: "200",
    },
    {
      name: "–†–µ–º–æ–Ω—Ç",
      description: "–û–∑–¥–æ–±–ª—é–≤–∞–ª—å–Ω—ñ —Ä–æ–±–æ—Ç–∏, —Ñ–∞—Ä–±—É–≤–∞–Ω–Ω—è, –ø–ª–∏—Ç–∫–∞",
      icon: "fas fa-paint-roller",
      color: "purple",
      basePrice: "500",
    },
    {
      name: "–ü–æ–±—É—Ç–æ–≤–∞ —Ç–µ—Ö–Ω—ñ–∫–∞",
      description: "–†–µ–º–æ–Ω—Ç –ø—Ä–∞–ª—å–Ω–∏—Ö –º–∞—à–∏–Ω, —Ö–æ–ª–æ–¥—ñ–ª—å–Ω–∏–∫—ñ–≤, –ø–ª–∏—Ç",
      icon: "fas fa-cog",
      color: "red",
      basePrice: "350",
    },
    {
      name: "–ú–µ–±–ª—ñ",
      description: "–ó–±–∏—Ä–∞–Ω–Ω—è, —Ä–µ–º–æ–Ω—Ç, –ø–µ—Ä–µ—Ç—è–∂–∫–∞ –º–µ–±–ª—ñ–≤",
      icon: "fas fa-couch",
      color: "indigo",
      basePrice: "250",
    },
  ]).returning();

  console.log(`‚úÖ Created ${categories.length} service categories`);

  // Insert sample users
  const sampleUsers = await db.insert(users).values([
    {
      username: "oleksandr_plumber",
      email: "oleksandr@example.com",
      password: "hashedpassword1",
      firstName: "–û–ª–µ–∫—Å–∞–Ω–¥—Ä",
      lastName: "–ü–µ—Ç—Ä–µ–Ω–∫–æ",
      phone: "+380671234567",
      userType: "master",
    },
    {
      username: "maria_electrician",
      email: "maria@example.com",
      password: "hashedpassword2",
      firstName: "–ú–∞—Ä—ñ—è",
      lastName: "–Ü–≤–∞–Ω–µ–Ω–∫–æ",
      phone: "+380671234568",
      userType: "master",
    },
    {
      username: "ivan_cleaner",
      email: "ivan@example.com",
      password: "hashedpassword3",
      firstName: "–Ü–≤–∞–Ω",
      lastName: "–ö–æ–≤–∞–ª–µ–Ω–∫–æ",
      phone: "+380671234569",
      userType: "master",
    },
  ]).returning();

  console.log(`‚úÖ Created ${sampleUsers.length} sample users`);

  // Insert sample masters
  const sampleMasters = await db.insert(masters).values([
    {
      userId: sampleUsers[0].id,
      specialization: "–°–∞–Ω—Ç–µ—Ö–Ω—ñ–∫",
      description: "–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π —Å–∞–Ω—Ç–µ—Ö–Ω—ñ–∫ –∑ 15-—Ä—ñ—á–Ω–∏–º –¥–æ—Å–≤—ñ–¥–æ–º —Ä–æ–±–æ—Ç–∏. –°–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—é—Å—è –Ω–∞ —É—Å—É–Ω–µ–Ω–Ω—ñ –ø—Ä–æ—Ç—ñ–∫–∞–Ω—å, –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Ç–∞ —Ä–µ–º–æ–Ω—Ç—ñ —Å–∞–Ω—Ç–µ—Ö–Ω—ñ—á–Ω–æ–≥–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è.",
      experience: "15 —Ä–æ–∫—ñ–≤ –¥–æ—Å–≤—ñ–¥—É",
      hourlyRate: "300",
      rating: "5.0",
      reviewCount: 127,
      isVerified: true,
      completedJobs: 1247,
      responseTime: "< 15 —Ö–≤",
      repeatClients: 94,
    },
    {
      userId: sampleUsers[1].id,
      specialization: "–ï–ª–µ–∫—Ç—Ä–∏–∫",
      description: "–°–µ—Ä—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π –µ–ª–µ–∫—Ç—Ä–∏–∫. –ü—Ä–æ–≤–æ–¥–∫–∞, –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è, —Ä–æ–∑–µ—Ç–∫–∏. –ì–∞—Ä–∞–Ω—Ç—ñ—è –Ω–∞ —Ä–æ–±–æ—Ç–∏.",
      experience: "8 —Ä–æ–∫—ñ–≤ –¥–æ—Å–≤—ñ–¥—É",
      hourlyRate: "400",
      rating: "4.8",
      reviewCount: 89,
      isVerified: true,
      completedJobs: 456,
      responseTime: "< 20 —Ö–≤",
      repeatClients: 87,
    },
    {
      userId: sampleUsers[2].id,
      specialization: "–ö–ª—ñ–Ω—ñ–Ω–≥",
      description: "–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–µ –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è –æ—Ñ—ñ—Å—ñ–≤ —Ç–∞ –∫–≤–∞—Ä—Ç–∏—Ä. –ï–∫–æ–ª–æ–≥—ñ—á–Ω—ñ –∑–∞—Å–æ–±–∏. –ö–æ–º–∞–Ω–¥–∞ –¥–æ 5 –æ—Å—ñ–±.",
      experience: "6 —Ä–æ–∫—ñ–≤ –¥–æ—Å–≤—ñ–¥—É",
      hourlyRate: "200",
      rating: "4.9",
      reviewCount: 156,
      isVerified: true,
      completedJobs: 789,
      responseTime: "< 25 —Ö–≤",
      repeatClients: 91,
    },
  ]).returning();

  console.log(`‚úÖ Created ${sampleMasters.length} sample masters`);

  // Insert sample services
  const sampleServices = await db.insert(services).values([
    {
      masterId: sampleMasters[0].id,
      categoryId: categories[0].id,
      name: "–£—Å—É–Ω–µ–Ω–Ω—è –ø—Ä–æ—Ç—ñ–∫–∞–Ω—å",
      description: "–ö—Ä–∞–Ω–∏, –∑–º—ñ—à—É–≤–∞—á—ñ, –∑'—î–¥–Ω–∞–Ω–Ω—è —Ç—Ä—É–±",
      price: "300",
    },
    {
      masterId: sampleMasters[1].id,
      categoryId: categories[1].id,
      name: "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–∑–µ—Ç–æ–∫",
      description: "–ü—Ä–æ–≤–æ–¥–∫–∞ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–ª–µ–∫—Ç—Ä–æ—Ä–æ–∑–µ—Ç–æ–∫",
      price: "400",
    },
    {
      masterId: sampleMasters[2].id,
      categoryId: categories[2].id,
      name: "–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–µ –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è",
      description: "–ü–æ–≤–Ω–µ –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è –∫–≤–∞—Ä—Ç–∏—Ä–∏ –∞–±–æ –æ—Ñ—ñ—Å—É",
      price: "200",
    },
  ]).returning();

  console.log(`‚úÖ Created ${sampleServices.length} sample services`);
  console.log("üéâ Database seeding completed!");
}

// Run seeding
seedDatabase()
  .then(() => {
    console.log("Seeding finished successfully");
    process.exit(0);
  })
  .catch((error) => {
    console.error("Seeding failed:", error);
    process.exit(1);
  });

export { seedDatabase };